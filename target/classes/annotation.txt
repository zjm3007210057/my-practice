参考：http://blog.csdn.net/kenthong/article/details/5811152

用一个权限控制的例子来说明一下，如何使用Annotation来简化我们的开发

预期功能：

1. 对于每个用户都设定一个对应的权限。

2. 每个Dao的操作都加入对权限的检查。权限不足则抛出安全异常。

思考：

1. Dao层的方法只关心Dao的操作，对于权限的检查则不需要关心。因此我们可以用AOP来实现对权限的检查
（在Java中使用动态代理来实现），实现权限检查和Dao操作的解耦。

2. 每个用户都要有相应的权限，而且每个用户的操作都是在不同的线程上进行，因为我们必须要提供
一个用户的权限上下文（RoleContext）来提供对权限的设置和获取。

3. 对于Dao层的实现可以采用面向接口的编码方式，实现各层之间的解耦。由于每个Dao层所对应
的实现类只有一个，因此，我们可以把实现类的信息作为元数据写入Dao接口中，所以这里最适合用Annotation来实现。

4. Dao层的方法所需要的权限信息与实现无关，因此这里也可以把权限的信息作为方法的元数据写入，
所以这里也十分适合用Annotation来实现。